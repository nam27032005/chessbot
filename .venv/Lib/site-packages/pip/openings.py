# chess_openings.py

import chess

# Thế khai cuộc (Opening)
# Định dạng: (nước đi trắng, nước đi đen)
OPENINGS = {
    "Italian Game": [
        ("e4", "e5"),
        ("Nf3", "Nc6"),
        ("Bc4", "Nf6"),
        ("d4", "exd4")
    ],
    "Ruy Lopez": [
        ("e4", "e5"),
        ("Nf3", "Nc6"),
        ("Bb5", "a6"),
        ("Ba4", "Nf6")
    ],
    "Sicilian Defense": [
        ("e4", "c5"),
        ("Nf3", "d6"),
        ("d4", "cxd4"),
        ("Nxd4", "Nf6")
    ]
}

# Danh sách nước đi khai cuộc cơ bản cho quân đen
BASIC_BLACK_OPENINGS = ["e5", "c5", "e6", "d5", "Nf6", "d6"]

# Mẫu chiến thuật trung cuộc (Middlegame)
# Định dạng: (FEN, nước đi tốt, mô tả)
MIDDLEGAME_PATTERNS = [
    # Đòn phối hợp: Đánh đôi (Fork) bằng mã
    (
        "rnbqkb1r/pppp1ppp/5n2/5p2/5P2/5N2/PPPP1PPP/RNBQKB1R w KQkq - 0 2",
        "Ne5",
        "Mã đánh đôi, đe dọa bắt hậu và xe"
    ),
    # Tấn công vua: Đưa hậu vào h5 để đe dọa chiếu hết
    (
        "rnbqkb1r/pppp1ppp/5n2/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R w KQkq - 0 2",
        "Qh5",
        "Đưa hậu vào h5, đe dọa chiếu hết ở f7"
    )
]

# Thế cờ tàn cuộc (Endgame)
# Định dạng: (FEN, chiến lược, mô tả)
ENDGAME_POSITIONS = [
    # Vua + Hậu vs Vua: Đưa vua đối phương ra rìa
    (
        "8/8/8/8/8/8/5Qk1/6K1 w - - 0 1",
        "Qh2",
        "Đưa vua đen ra rìa để chiếu hết"
    ),
    # Vua + Xe vs Vua: Đưa vua đối phương ra rìa
    (
        "8/8/8/8/8/8/5Rk1/6K1 w - - 0 1",
        "Rh2",
        "Đưa vua đen ra rìa để chiếu hết"
    ),
    # Đẩy tốt để phong hậu
    (
        "8/8/8/8/8/6P1/5K2/6k1 w - - 0 1",
        "g4",
        "Đẩy tốt để phong hậu"
    )
]

def get_opening_move(board):
    """Tra cứu nước đi khai cuộc từ danh sách thế khai cuộc."""
    moves = board.move_stack
    if not moves or board.turn == chess.WHITE:
        return None  # Chỉ tra cứu nếu bot (đen) đang đi

    # Tạo một bàn cờ tạm để tái hiện các nước đi
    temp_board = chess.Board()
    move_str = ""

    # Tái hiện các nước đi đã thực hiện
    for move in moves:
        move_san = temp_board.san(move)
        temp_board.push(move)
        move_str += move_san + " "

    move_str = move_str.strip()

    # Tra cứu thế khai cuộc
    for opening_name, opening_moves in OPENINGS.items():
        # Tạo chuỗi nước đi từ danh sách OPENINGS
        opening_str = " ".join([move[0] for i, move in enumerate(opening_moves) if i < len(moves)])
        if move_str == opening_str:
            # Lấy nước đi tiếp theo của đen
            next_move_index = len(moves)
            if next_move_index < len(opening_moves):
                next_move = opening_moves[next_move_index][1]
                try:
                    return board.parse_san(next_move)
                except:
                    continue

    # Nếu không tìm thấy thế khai cuộc, chọn một nước đi cơ bản
    for move in BASIC_BLACK_OPENINGS:
        try:
            return board.parse_san(move)
        except:
            continue

    return None

def get_middlegame_move(board):
    """Nhận diện mẫu chiến thuật trung cuộc và trả về nước đi tốt."""
    current_fen = board.fen()
    for fen, move, _ in MIDDLEGAME_PATTERNS:
        if current_fen == fen:
            try:
                return board.parse_san(move)
            except:
                continue
    return None

def get_endgame_move(board):
    """Nhận diện thế cờ tàn cuộc và trả về nước đi tốt."""
    current_fen = board.fen()
    for fen, move, _ in ENDGAME_POSITIONS:
        if current_fen == fen:
            try:
                return board.parse_san(move)
            except:
                continue
    return None